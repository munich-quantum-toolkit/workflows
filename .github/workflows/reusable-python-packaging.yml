# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

name: üêç ‚Ä¢ Packaging

on:
  workflow_call:
    inputs:
      pure-python:
        description: "Whether this is a pure Python package (or contains compiled extensions)"
        default: false
        type: boolean
      setup-z3:
        description: "Whether to set up Z3"
        default: false
        type: boolean
      z3-version:
        description: "The version of Z3 to set up"
        default: "4.13.4"
        type: string

jobs:
  build_sdist:
    name: üì¶ SDist
    runs-on: ubuntu-latest
    steps:
      # check out the repository (including submodules and all history)
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
      # set up uv for faster Python package management
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5
      # build the source distribution
      - name: Build SDist
        run: uv build --sdist
      # check the metadata of the source distribution
      - name: Check metadata
        run: uvx twine check dist/*
      # upload the source distribution as an artifact (adds a `dev-` prefix for PRs)
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ github.event_name == 'pull_request' && 'dev-' || '' }}cibw-sdist
          path: dist/*.tar.gz

  build_wheel:
    if: ${{ inputs.pure-python }}
    name: üõû Wheel
    runs-on: ubuntu-latest
    steps:
      # check out the repository (including submodules and all history)
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
      # set up uv for faster Python package management
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5
      # build the wheel
      - name: Build Wheel
        run: uv build --wheel
      # check the metadata of the wheel
      - name: Check metadata
        run: uvx twine check dist/*
      # upload the wheel as an artifact (adds a `dev-` prefix for PRs)
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ github.event_name == 'pull_request' && 'dev-' || '' }}cibw-wheel
          path: dist/*.whl

  build_wheels:
    if: ${{ !inputs.pure-python }}
    name: üé° ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        # build wheels for all supported Python versions on all platforms
        runs-on:
          [ubuntu-24.04, ubuntu-24.04-arm, macos-13, macos-14, windows-latest]
    steps:
      # check out the repository (including submodules and all history)
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
      # set up MSVC development environment (Windows only)
      - uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1
      # optionally set up Z3 (non-Ubuntu only)
      - if: ${{ inputs.setup-z3 && matrix.runs-on != 'ubuntu-24.04' && matrix.runs-on != 'ubuntu-24.04-arm' }}
        name: Setup Z3
        uses: cda-tum/setup-z3@34d1e04d31a168fa330626fad1275cf23de02591 # v1
        with:
          version: ${{ inputs.z3-version }}
      # set up ccache for faster C++ builds
      - if: ${{ matrix.runs-on != 'ubuntu-24.04' && matrix.runs-on != 'ubuntu-24.04-arm' }}
        name: Setup ccache
        uses: Chocobo1/setup-ccache-action@f84f86840109403e0fe0ded8b0766c9633affa16 # v1
        with:
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc
          override_cache_key: wheels-${{ matrix.runs-on }}
      # set up uv for faster Python package management
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@0c5e2b8115b80b4c7c5ddf6ffdd634974642d182 # v5
        with:
          enable-cache: ${{ matrix.runs-on != 'ubuntu-24.04' && matrix.runs-on != 'ubuntu-24.04-arm' }}
      # run cibuildwheel to build wheels for the specified Python version
      - uses: pypa/cibuildwheel@d04cacbc9866d432033b1d09142936e6a0e2121a # v2.23
      - name: Verify clean directory
        run: git diff --exit-code
        shell: bash
      # upload the wheels as an artifact (adds a `dev-` prefix for PRs)
      - name: Upload wheels
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ github.event_name == 'pull_request' && 'dev-' || '' }}cibw-wheels-${{ matrix.runs-on }}-${{ strategy.job-index }}
          path: wheelhouse/*.whl
