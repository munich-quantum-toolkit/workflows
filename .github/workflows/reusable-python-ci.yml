# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

name: üêç ‚Ä¢ CI

on:
  workflow_call:
    inputs:
      ###---- General inputs ----------------------------------------------------------------------------------------###
      setup-z3:
        description: "Whether to set up Z3"
        default: false
        type: boolean
      z3-version:
        description: "The version of Z3 to set up"
        default: "4.13.4"
        type: string
      ###---- Ubuntu-specific inputs --------------------------------------------------------------------------------###
      ### Runs (ubuntu-24.04, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm)
      ### Defaults are
      ### - ubuntu-24.04
      ### - ubuntu-24.04-arm
      ###------------------------------------------------------------------------------------------------------------###
      enable-ubuntu2404:
        description: "Whether to enable the Ubuntu 24.04 runner"
        default: true
        type: boolean
      enable-ubuntu2204:
        description: "Whether to enable the Ubuntu 22.04 runner"
        default: false
        type: boolean
      enable-ubuntu2404-arm:
        description: "Whether to enable the Ubuntu 24.04 ARM runner"
        default: true
        type: boolean
      enable-ubuntu2204-arm:
        description: "Whether to enable the Ubuntu 22.04 ARM runner"
        default: false
        type: boolean
      ###---- macOS-specific inputs ---------------------------------------------------------------------------------###
      ### Runs (macos-13, macos-14, macos-15)
      ### Defaults are
      ### - macos-13
      ### - macos-14
      ###------------------------------------------------------------------------------------------------------------###
      enable-macos13:
        description: "Whether to enable the macOS 13 runner"
        default: true
        type: boolean
      enable-macos14:
        description: "Whether to enable the macOS 14 runner"
        default: true
        type: boolean
      enable-macos15:
        description: "Whether to enable the macOS 15 runner"
        default: false
        type: boolean
      ###---- Windows-specific inputs -------------------------------------------------------------------------------###
      ### Runs (windows-2022, windows-2025, windows-11-arm)
      ### Defaults are
      ### - windows-2022
      ###------------------------------------------------------------------------------------------------------------###
      enable-windows2022:
        description: "Whether to enable the Windows 2022 runner"
        default: true
        type: boolean
      enable-windows2025:
        description: "Whether to enable the Windows 2025 runner"
        default: false
        type: boolean
      enable-windows11-arm:
        description: "Whether to enable the Windows 11 ARM runner"
        default: false
        type: boolean

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    steps:
      - id: build-matrix
        name: Build runner matrix
        run: |
          matrix='[]'
          if [ "${{ inputs.enable-ubuntu2404 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "ubuntu-24.04"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "ubuntu-22.04"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2404-arm }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "ubuntu-24.04-arm"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204-arm }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "ubuntu-22.04-arm"}]')
          fi
          if [ "${{ inputs.enable-macos13 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "macos-13"}]')
          fi
          if [ "${{ inputs.enable-macos14 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "macos-14"}]')
          fi
          if [ "${{ inputs.enable-macos15 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "macos-15"}]')
          fi
          if [ "${{ inputs.enable-windows2022 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "windows-2022"}]')
          fi
          if [ "${{ inputs.enable-windows2025 }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "windows-2025"}]')
          fi
          if [ "${{ inputs.enable-windows11-arm }}" = "true" ]; then
            matrix=$(echo $matrix | jq '. + [{"runs-on": "windows-11-arm"}]')
          fi
          echo "matrix=$(echo $matrix | jq -rc .)" >> $GITHUB_OUTPUT
          echo $(echo $matrix | jq -rc .)

  python-tests:
    needs: [build-matrix]
    name: üêç ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    uses: ./.github/workflows/reusable-python-tests.yml
    with:
      runs-on: ${{ matrix.runs-on }}
      setup-z3: ${{ inputs.setup-z3 }}
      z3-version: ${{ inputs.z3-version }}

  python-coverage-upload:
    name: üìà
    needs: [python-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for the `actions/checkout` action
      id-token: write # Required for the `codecov/codecov-action` action
    steps:
      # check out the repository (mostly for the codecov config)
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      # download coverage reports from all jobs
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4
        with:
          pattern: coverage-*
          path: coverage-reports
          merge-multiple: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5
        with:
          fail_ci_if_error: true
          flags: python
          use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}
